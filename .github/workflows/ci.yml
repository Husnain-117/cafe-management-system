name: Cafe Management System CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Services
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          for service in api-gateway menu-services order-services payment-services inventory-services customer-services; do
            if [ -d "$service" ]; then
              echo "Installing dependencies for $service"
              cd $service
              if [ -f "package.json" ]; then
                npm install || exit 1
              else
                echo "No package.json found in $service"
              fi
              cd ..
            else
              echo "Directory $service not found"
            fi
          done

      - name: Run tests
        run: |
          for service in api-gateway menu-services order-services payment-services inventory-services customer-services; do
            if [ -d "$service" ]; then
              echo "Testing $service"
              cd $service
              if [ -f "package.json" ]; then
                npm test || echo "No tests found for $service"
              else
                echo "No package.json found in $service"
              fi
              cd ..
            else
              echo "Directory $service not found"
            fi
          done

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build services
        run: |
          echo "Building services with docker compose..."
          docker compose build --no-cache

      - name: Start services
        run: |
          echo "Starting services..."
          docker compose up -d
          echo "Waiting for services to start..."
          sleep 30

      - name: Check service status
        run: |
          echo "Checking service status..."
          docker compose ps
          docker compose logs

      - name: Health checks
        run: |
          for port in 3000 3001 3002 3003 3004 3005; do
            echo "Testing health endpoint on port $port..."
            curl -v http://localhost:$port/health || echo "Service on port $port not responding"
          done

      - name: MongoDB check
        run: |
          echo "Checking MongoDB connection..."
          docker compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" || echo "MongoDB check failed"

      - name: Save logs
        if: always()
        run: |
          mkdir -p ./logs
          docker compose logs > ./logs/integration-test-logs.txt
          echo "Environment information:" >> ./logs/integration-test-logs.txt
          docker version >> ./logs/integration-test-logs.txt
          docker compose version >> ./logs/integration-test-logs.txt

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-logs
          path: ./logs/
          retention-days: 5

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up services..."
          docker compose down -v