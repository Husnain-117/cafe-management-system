name: Cafe Management System CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Services
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          services=("api-gateway" "menu-services" "order-services" "payment-services" "inventory-services" "customer-services")
          for service in "${services[@]}"; do
            echo "Installing dependencies for $service"
            cd $service
            npm install
            cd ..
          done

      - name: Run tests
        run: |
          services=("api-gateway" "menu-services" "order-services" "payment-services" "inventory-services" "customer-services")
          for service in "${services[@]}"; do
            echo "Running tests for $service"
            cd $service
            npm test || echo "No tests found for $service"
            cd ..
          done

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start services
        run: |
          docker compose up -d
          echo "Waiting for services to start..."
          sleep 30

      - name: Health checks
        run: |
          curl -f http://localhost:3000/health || exit 1
          curl -f http://localhost:3001/health || exit 1
          curl -f http://localhost:3002/health || exit 1
          curl -f http://localhost:3003/health || exit 1
          curl -f http://localhost:3004/health || exit 1
          curl -f http://localhost:3005/health || exit 1

      - name: MongoDB check
        run: docker compose exec -T mongodb mongosh --eval "db.adminCommand('ping')"

      - name: Save logs
        if: always()
        run: docker compose logs > integration-test-logs.txt

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-logs
          path: integration-test-logs.txt
          retention-days: 5

      - name: Cleanup
        if: always()
        run: docker compose down